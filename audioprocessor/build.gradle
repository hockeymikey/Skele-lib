apply plugin: 'maven-publish'
apply plugin: 'com.android.library'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 1
        versionName "1.1.0"
        group = "com.cogi.android"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            moduleName 'cogi-audioprocessor'
            abiFilters 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
        }
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11 -frtti -fexceptions"
                version "3.10.2"
            }
        }

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            jniDebuggable = true
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/cpp']
        }
    }
    ndkVersion '21.0.6113669'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'
    implementation group: 'javazoom', name: 'jlayer', version: '1.0.1'
}
repositories {
    mavenLocal()
}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    android.libraryVariants.all { variant ->
        if (variant.name == 'release') {
            owner.classpath += variant.javaCompile.classpath
        }
    }
    exclude '**/R.html', '**/R.*.html', '**/index.html'
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

//gradlew publishToMavenLocal
project.afterEvaluate {
    publishing {
        publications {
            maven(MavenPublication) {
                setGroupId  'com.cogi.android'
                version android.defaultConfig.versionName
                setArtifactId 'audioprocessor'
                
                artifact androidJavadocsJar
                artifact androidSourcesJar
                artifact bundleReleaseAar
            }
        }
        //gradlew publish
        repositories {
            maven {
                credentials {
                    /*
                    create or edit a file at $userhome/.gradle/gradle.properties and set:
                        cogiNexusUsername=yourusername
                        cogiNexusPassword=yourpassword
                    */
                    username cogiNexusUsername
                    password cogiNexusPassword
                }
                if (version.toString().contains('SNAPSHOT'))
                    url 'https://nexus.cogi.com/repository/cogi-maven-snapshots/'
                else
                    url 'https://nexus.cogi.com/repository/cogi-maven-releases/'
            }
        }
    }
}